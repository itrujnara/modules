// nf-core modules test stimulus/checktorchmodel
nextflow_process {

    name "Test Process STIMULUS_CHECKTORCHMODEL"
    script "../main.nf"
    process "STIMULUS_CHECKTORCHMODEL"

    tag "modules"
    tag "modules_nfcore"
    tag "stimulus"
    tag "stimulus/checktorchmodel"

    test("basic - csv - py") {

        when {
            process {
                """
                input[0] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_stimulus.csv', checkIfExists: true)
                input[1] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic.yaml', checkIfExists: true)
                input[2] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_model.py', checkIfExists: true)
                input[3] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_model_cpu.yaml', checkIfExists: true)
                input[4] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { with(process.out.log) {
                    assert path(get(1)).readLines().first().contains("Trial finishes successfully")
                } },
                { assert snapshot(process.out.versions).match() }
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("basic - csv - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_stimulus.csv', checkIfExists: true)
                input[1] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic.yaml', checkIfExists: true)
                input[2] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_model.py', checkIfExists: true)
                input[3] = file(params.modules_testdata_base_path + '../../deepmodeloptim/testdata/titanic/titanic_model_cpu.yaml', checkIfExists: true)
                input[4] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
